runconfig:
    name: gunw_workflow_default

    groups:
        pge_name_group:
            pge_name: INSAR_L_PGE

        input_file_group:
            # Required - File path to reference RSLC HDF5 file
            reference_rslc_file:
            # Required - File path to secondary RSLC HDF5 file
            secondary_rslc_file:

            # REQUIRED for QA. NOT REQUIRED if only running Product SAS.
            # These field(s) should contain the filename of the
            # corresponding NISAR product(s) for QA to process.
            # If Product SAS and QA SAS are run back-to-back,
            # the(se) field(s) should be identical to filename convention
            # defined in `sas_output_file`.
            qa_rifg_input_file: RIFG_product.h5
            qa_runw_input_file: RUNW_product.h5
            qa_gunw_input_file: GUNW_product.h5
            qa_roff_input_file: ROFF_product.h5
            qa_goff_input_file: GOFF_product.h5

        dynamic_ancillary_file_group:
            # REQUIRED - Digital elevation model
            dem_file:

            # PLACEHOLDER - Digital elevation model file description, optional
            dem_file_description:

            water_mask_file:
            orbit_files:
                reference_orbit_file:
                secondary_orbit_file:
            tec_file:

            # Troposphere weather model files
            troposphere_weather_model_files:
                reference_troposphere_file:
                secondary_troposphere_file:

        product_path_group:
            # Directory where PGE will place results. Irrelevant to SAS.
            product_path: product_path

            # Directory where SAS can write temporary data
            scratch_path: .

            # SAS writes output product to the following file. PGE may rename.
            # After the SAS completes, the PGE wrapper renames the product file
            # according to proper file naming conventions.
            # In INSAR mode, GUNW, GOFF, RIFG, ROFF, and RUNW will be prepended
            # to sas_output_file
            sas_output_file: _product.h5

            # REQUIRED for QA. NOT REQUIRED if only running Product SAS.
            # Output directory to store all QA output files.
            # Because multiple InSAR products can be generated by this
            # runconfig, QA will make new product-specific directories
            # here to store the corresponding output files in.
            # Ex: if the output dir is set to './qa' and QA is requested for
            # RIFG and RUNW products, then QA will create './qa/rifg' and
            # './qa/runw' and save the respective QA outputs in these.
            qa_output_dir: ./qa

        primary_executable:
            product_type: GUNW
            product_version: 0.1.0

        debug_level_group:
            debug_switch: false

        # TODO OPTIONAL - To setup type of worker
        worker:
            # OPTIONAL - To prevent downloading DEM / other data automatically. Default True
            internet_access: False

            # OPTIONAL - To explicitly use GPU capability if available. Default False
            gpu_enabled: False

            # Index of the GPU to use for processing, optional. Defaults to the
            # first available CUDA device. Ignored if *gpu_enabled* is False.
            gpu_id: 0

        # ADT section - isce3 + pyre workflow
        processing:
            # Process single co-pol in offset and rubbersheeting
            process_single_co_pol_offset: True

            input_subset:
                # Frequencies and polarizations to be processed
                list_of_frequencies:
                    # Keys for frequency A and B followed by a list of polarizations to process:
                    #     {frequency}: [polarizations]
                    #
                    # - Only frequencies listed (i.e, 'A' and/or 'B') will be processed.
                    # - If the [polarizations] list is empty, all available polarizations
                    # for given frequency will be processed
                    A:
                    B:

            # TODO OPTIONAL - Only checked when internet access is available
            dem_download:
                # OPTIONAL - s3 bucket / curl URL / local file
                source:
                top_left:
                    x:
                    y:
                bottom_right:
                    x:
                    y:

            # OPTIONAL - Mechanism to specify output posting and DEM
            geocode:
                # Optional - path to RUNW product to geocode
                runw_path:
                # Optional - path to ROFF product to geocode
                roff_path:
                # Optional - path to RIFG product to geocode
                rifg_path:

                # OPTIONAL - To control output grid in same units as output EPSG
                x_snap:

                # OPTIONAL - To control output grid in same units as output EPSG
                y_snap:

                # OPTIONAL - Same as input DEM if not provided.
                output_epsg:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # If not provided, spacing values will be taken from provided DEM.
                # All postings/spacings must be > 0.
                # ISCE3 output rasters always have North-up West-left orientation
                output_posting:
                    A:
                        x_posting:
                        y_posting:
                    B:
                        x_posting:
                        y_posting:

                # OPTIONAL - Spacing between pixels for wrapped interferogram,
                # in same units as output EPSG.
                # If not provided, spacing values will be taken from provided DEM.
                # All postings/spacings must be > 0.
                # ISCE3 output rasters always have North-up West-left orientation
                wrapped_interferogram:
                    # Default interpolation method is SINC method
                    interp_method: SINC
                    # OPTIONAL - To control output grid in same units as output EPSG
                    x_snap:
                    # OPTIONAL - To control output grid in same units as output EPSG
                    y_snap:

                    output_posting:
                        A:
                            x_posting: 20
                            y_posting: 20
                        B:
                            x_posting:
                            y_posting:

                # OPTIONAL - Can control with absolute values or with snap values
                top_left:
                    # OPTIONAL - Set top-left y in same units as output EPSG
                    y_abs:
                    # OPTIONAL - Set top-left x in same units as output EPSG
                    x_abs:

                # OPTIONAL - Can control with absolute values or with snap values
                bottom_right:
                    y_abs:
                    x_abs:

                # OPTIONAL - Set lines to be processed per block
                lines_per_block: 1000

                # OPTIONAL - Set default data interpolation method to bilinear
                interp_method: BILINEAR

            radar_grid_cubes:

                # List of heights in meters
                heights:

                # OPTIONAL - Same as the geocode group output_epsg if not provided
                output_epsg:

                # OPTIONAL - Spacing between pixels, in same units as output EPSG.
                # If not provided, spacing values will be taken from geocode group
                # parameters.
                # All postings/spacings must be > 0.
                # ISCE3 output rasters always have North-up West-left orientation
                output_posting:
                    x_posting:
                    y_posting:

                # OPTIONAL - To control output grid in same units as output EPSG
                y_snap:

                # OPTIONAL - To control output grid in same units as output EPSG
                x_snap:

                # OPTIONAL - Can control with absolute values or with snap values
                top_left:
                    # OPTIONAL - Set top-left y in same units as output EPSG
                    y_abs:
                    # OPTIONAL - Set top-left x in same units as output EPSG
                    x_abs:

                # OPTIONAL - Can control with absolute values or with snap values
                bottom_right:
                    y_abs:
                    x_abs:

            bandpass:
                # Number of lines per blocks
                lines_per_block: 1000
                # Set window function for range spectrum bandpass filtering
                window_function: tukey
                # Shape parameter. For Kaiser, 0 <= shape < Inf.
                # For Cosine and Tukey, 0 <= shape <= 1.
                window_shape: 0.25
                # FFT size in range.
                range_fft_size:

            ionosphere_phase_correction:
                enabled: False
                # Number of lines per blocks
                lines_per_block: 1000
                # ionosphere estimation methods
                #(split_main_band, main_side_band, main_diff_ms_band)
                spectral_diversity: split_main_band
                # Polarization to be used for ionosphere estimation.
                # Split_main_band method does not require frequency B.
                list_of_frequencies:
                   A:
                   B:
                # Options for split_main_band method
                split_range_spectrum:
                    lines_per_block: 1000
                    # Bandwidth for lower sub-band SLC in Hz
                    # If unspecified, it is automatically set by the workflow
                    low_band_bandwidth:
                    # Bandwidth for upper sub-band SLC in Hz
                    # If unspecified, it is automatically set by the workflow
                    high_band_bandwidth:
                    window_function: tukey
                    # Shape parameter. For Kaiser, 0 <= shape < Inf.
                    # For Cosine and Tukey, 0 <= shape <= 1.
                    window_shape: 0.25
                # Options for dispersive filter
                dispersive_filter:
                    # Apply filtering to dispersive layer
                    enabled: True
                    # Filter type for dispersive raster
                    # (median_filter, coherence, connected_components)
                    filter_mask_type: coherence
                    # Median filter size for mask generation
                    median_filter_size: 15
                    # Coherence thresholds 0<= thresholds <=1
                    filter_coherence_threshold: 0.5
                    # Filling method for invalid regions
                    # (nearest, smoothed)
                    filling_method: nearest
                    # Unwrapping correction bool. If False, only filtering
                    # is applied
                    unwrap_correction: False
                    # Kernel size in pixels
                    kernel_range: 800
                    kernel_azimuth: 800
                    # Sigma for gaussian filtering in pixel
                    sigma_range: 100
                    sigma_azimuth: 100
                    # Number of iteration for low pass filtering
                    filter_iterations: 1

            troposphere_delay:
                # Boolean flag to activate (True) troposphere delay computation
                enabled: False
                # pyAPS package is used for default
                package: pyaps
                # Weather model type
                weather_model_type: ERA5
                # Conventional line of sight delay
                delay_direction: line_of_sight_mapping
                # Delay product, where comb product is the summation of wet and hydrostatic
                enable_wet_product:  True
                enable_hydrostatic_product: True
                enable_comb_product: False

            geo2rdr:
                # No topo_path provided. Default to scratch_path.
                threshold: 1.0e-8
                maxiter: 25
                lines_per_block: 1000

            rdr2geo:
                # No topo_path provided. Default to scratch_path.
                threshold: 1.0e-7
                numiter: 25
                extraiter: 10
                lines_per_block: 1000

                # default to save only layers needed for geo2rdr + InSAR
                # x, y, and height required for geo2rdr and InSAR
                # layover_shadow required for InSAR
                write_x: True
                write_y: True
                write_z: True
                write_incidence: False
                write_heading: False
                write_local_incidence: False
                write_local_psi: False
                write_simulated_amplitude: False
                write_layover_shadow: False

            coarse_resample:
                # Path to coarse offsets directory (geo2rdr offsets)
                offsets_dir:
                # Number of lines per tile to resample in batch
                lines_per_tile: 100

            dense_offsets:
                # Flag to enable/disable dense offsets estimation
                enabled: True
                # Lines per block to process in batch
                lines_per_block: 1000
                # Path to HDF5 file or directory with geometry-coregistered SLCs.
                # Not required as we allow the use of intermediate outputs from
                # the previous InSAR module, which is not user-specified
                coregistered_slc_path:
                # Number of columns for chip/template window in reference image
                window_range: 64
                # Number of lines for chip/template window in reference image
                window_azimuth: 64
                # Number of columns for search chip/template in secondary image
                half_search_range: 20
                # Number of lines for search chip/template in secondary image
                half_search_azimuth: 20
                # Number of columns to skip in reference image for next offset estimate
                skip_range: 32
                # Number of lines to skip in reference image for next offset estimate
                skip_azimuth: 32
                # Margin around image edges to avoid for offset computation
                margin: 0
                # Number of columns of output offset (covariance, snr) file
                offset_width:
                # Number of lines of output offset (covariance, snr) file
                offset_length:
                # Start pixel of the reference image along slant range
                start_pixel_range:
                # Start pixel of the reference image along azimuth
                start_pixel_azimuth:
                # Domain (frequency or spatial) where to compute cross-correlation
                cross_correlation_domain: 'frequency'
                # Anti-aliasing oversampling factor to apply to reference/secondary SLC
                # prior to cross-correlation computation
                slc_oversampling_factor: 2
                # Deramp data prior to FFT: magnitude or complex (linear phase ramp)
                deramping_method: 'magnitude'
                # Flag to use constant range/azimuth offsets in dense offsets estimation
                use_gross_offsets: True
                # Constant offset along slant range to guide dense offset estimation
                gross_offset_range: 0
                # Constant gross offset along az to guide dense offset estimation
                gross_offset_azimuth: 0
                # File path to pixel by pixel gross offset (e.g. from reference velocity map)
                gross_offset_filepath:
                # Flag to add gross offset to the output of dense offset file
                merge_gross_offset:
                # Square zoom window size for cross-correlation statistics (SNR, covariance)
                correlation_statistics_zoom: 21
                # Square zoom window size for sub-pixel offset refinement
                correlation_surface_zoom: 8
                # Oversampling factor of the correlation surface for sub-pixel offset refinement
                correlation_surface_oversampling_factor: 64
                # Correlation surface oversampling algorithm
                correlation_surface_oversampling_method: 'fft'
                # Number of cuda streams
                cuda_streams:
                # Number of offset estimates to process in batch along slant range
                windows_batch_range: 10
                # Number of offset estimates to process in batch along azimuth
                windows_batch_azimuth: 1

            offsets_product:
                enabled: False
                # Path to HDF5 file or directory with geometry-coregistered SLCs.
                # Not required as we allow the use of intermediate outputs from
                # the previous InSAR module, which is not user-specified
                coregistered_slc_path:
                # Lines per block
                lines_per_block: 1000
                # Margin round ref RSLC edges to exclude during cross-correlation
                margin: 0
                # Number of lines of offset raster
                offset_length:
                # Number of samples of offset raster
                offset_width:
                # Skip window along range
                skip_range: 15
                # Skip window along azimuth
                skip_azimuth: 15
                # Start pixel in reference RSLC along range
                start_pixel_range:
                # Start pixel in reference RSLC along azimuth
                start_pixel_azimuth:
                # Cross-correlation domain
                cross_correlation_domain: 'frequency'
                # Deramp data prior to FFT: magnitude or complex (linear phase ramp)
                deramping_method: 'magnitude'
                # Anti-aliasing oversampling factor to apply to reference/secondary SLC
                # prior to cross-correlation computation
                slc_oversampling_factor: 2
                # File path to pixel by pixel gross offset (e.g. from reference velocity map)
                gross_offset_filepath:
                # Constant offset between ref and secondary RSLCs in slant range
                gross_offset_range: 0
                # Constant offset between ref and secondary RSLCs in azimuth
                gross_offset_azimuth: 0
                # Merge gross offset file
                merge_gross_offset: False
                # Correlation surface zoom for statistics
                correlation_statistics_zoom: 21
                # Correlation surface zoom
                correlation_surface_zoom: 8
                # Correlation surface oversampling factor
                correlation_surface_oversampling_factor: 64
                # Correlation surface oversampling method
                correlation_surface_oversampling_method: 'sinc'
                # Number of cuda streams
                cuda_streams: 2
                # Number of windows in range to process in batch
                windows_batch_range: 10
                # Number of windows in azimuth to process in batch
                windows_batch_azimuth: 5
                # First layer of offsets (same as dense_offsets params)
                layer1:
                    window_range: 64
                    window_azimuth: 64
                    half_search_range: 16
                    half_search_azimuth: 16

            rubbersheet:
                # Path to dense offsets outputs (offsets, snr, covariance).
                # Not required as InSAR workflow allows using intermediate outputs
                # from previous steps (not user-specified)
                dense_offsets_path:
                # Path to offsets product outputs (offsets, snr, covariance).
                # Not required as InSAR workflow allows using intermediate outputs
                # from previous steps (not user-specified)
                offsets_product_path:
                # Path to geo2rdr offsets
                geo2rdr_offsets_path:
                # Flag to enable/disable rubbersheet step
                enabled: True
                # Metric used to identify offsets outliers
                culling_metric: median_filter
                # Size of median and moving average filter in range. Median filter is used
                # for offset outlier identification. Moving average is used to smooth the
                # culled offset field prior to interferogram formation
                median_filter_size_range: 9
                # Size of median and moving average filter in azimuth (see above)
                median_filter_size_azimuth: 9
                # Threshold for outlier identification. Depends on "culling_metric".
                # SNR: offsets with SNR below threshold are identified as outliers
                # Covariance: offsets with range/azimuth covariance above threshold are outliers
                # Median filter: offsets with median absolute deviation above thresholds are outliers
                threshold: 0.5
                # Flag to enable mask refinement The intent of this refinement is to remove
                # noisy spots on 1-2 pixels after the first outlier identification.
                # The refinement is performed by thresholding the median absolute deviation of
                # the offsets where outlier locations have been filled with zeros
                mask_refine_enabled: True
                # Threshold for outlier refinement mask computation
                mask_refine_threshold: 0.5
                # Size of median filter in range and azimuth for outlier mask refinement
                mask_refine_filter_size: 3
                # Method to fill data holes left by outliers culling:
                # fill_smoothed: iteratively fill holes with mean value in a neighborhood.
                # nearest_neighbor: Fill holes with nearest neighbor interpolation
                outlier_filling_method: fill_smoothed
                fill_smoothed:
                    # Number of fill smoothed iterations
                    iterations: 1
                    # Size of the neighborhood to look for smoothed values
                    kernel_size: 3
                # Interpolation method. Interpolation is used to fill residual outlier
                # holes if present
                interpolation_method: linear
                # It is good practice to filter the offsets prior to interferogram
                # formation to reduce noise. We expose: no_filter: do not filter the offsets/
                # degrade offsets resolution. median_filter, boxcar_filter (moving average),
                # gaussian_filter
                offsets_filter: boxcar
                boxcar:
                    # Filter size (median/boxcar) in slant range
                    filter_size_range: 5
                    filter_size_azimuth: 5

            fine_resample:
                # Flag to enable/disable fine resampling
                enabled: True
                # Path to fine offsets (rubbersheet dense offsets)
                offsets_dir:
                # Number of lines per tile to resample in batch
                lines_per_tile: 100

            crossmul:
                # Number of range looks to generate wrapped interferogram in RIFG
                range_looks: 11
                # Number of azimuth looks to generate wrapped interferogram in RIFG
                azimuth_looks: 11
                flatten: True
                oversample: 2
                lines_per_block: 1024
                # If True, activates common band range filtering
                common_band_range_filter: False
                # If True, activates common band azimuth filtering
                common_band_azimuth_filter: False

            filter_interferogram:
                interferogram_path:
                mask:
                    general:
                lines_per_block: 100
                filter_type: boxcar
                boxcar:
                    filter_size_range: 9
                    filter_size_azimuth: 9

            baseline:
                # 3D_full: compute baselines for all heights in metadata cube
                # top_bottom: compute baselines for top and bottom heights
                mode: 'top_bottom'

            phase_unwrap:
                # Path to HDF5 file or directory containing the input interferogram
                # and coherence (normalized magnitude of complex correlation) rasters
                # Not required as we allow the use of intermediate outputs from
                # the previous InSAR module, which is not user-specified.
                # Required for running stand-alone phase unwrapping
                crossmul_path:
                # Number of looks in slant range and azimuth directions to generate the
                # wrapped interferogram that will be unwrapped in RUNW.
                # If range_looks = 1 and azimuth_looks = 1 no further multilooking occurs
                # In this case the wrapped interferogram in RIFG will be unwrapped.
                range_looks: 1
                azimuth_looks: 1
                # Mask and fill wrapped InSAR phase prior to unwrapping
                preprocess_wrapped_phase:
                    # Enable/disable preprocessing of wrapped igram
                    enabled: False
                    # Mask for outlier identification. User-provided or data-driven
                    mask:
                        # Path to user-provided mask
                        mask_path:
                        # Type of data-driven mask to compute. Data-driven masking
                        # is ignored if mask_path is provided. mask_type can be:
                        # 1) median_filter: compute mask with median absolute deviation thresholding
                        # 2) coherence: compute mask with normalized InSAR coherence thresholding
                        # 3) water: extract water areas from water mask file in dynamic ancillary data
                        mask_type: coherence
                        # buffer from the land. Unit is [km]. Buffer should be integer.
                        ocean_water_buffer: 1
                        inland_water_buffer: 1
                        # Threshold for invalid pixels. If mask_type is coherence (median_filter)
                        # values below (above) threshold are classified as outliers
                        outlier_threshold: 0.5
                        # Size of median filter kernel (same shape in range/azimuth). Only used if
                        # "mask_type" is "median_filter"
                        median_filter_size: 25
                    # Enable/disable filling invalid values. If disabled, invalid values
                    # are replaced with zero.
                    filling_enabled: False
                    # Algorithm to fill invalid wrapped igram pixels
                    filling_method: distance_interpolator
                    # Distance interpolator options based on Chen et al. 2015
                    # https://doi.org/10.1002/2015GL065031
                    distance_interpolator:
                        # Distance/radius of the sampling window (pixels)
                        distance: 2
                # Unwrapping algorithm to use
                algorithm: icu
                # Default parameters for ICU
                icu:
                    # Seed point to initialize ICU algorithm
                    seed: 0
                    # Number of lines in buffer to process simultaneously
                    buffer_lines: 3700
                    # Number of overlapping lines for each data block
                    overlap_lines: 200
                    # Flag to activate neutrons based on phase gradient metric
                    use_phase_gradient_neutron: False
                    # Flag to activate neutron based on reference RSLC intensity
                    use_intensity_neutron: False
                    # Square window size for phase gradient computation
                    phase_gradient_window_size: 5
                    # Threshold value for phase gradient neutrons (radian)
                    neutron_phase_gradient_threshold: 3.0
                    # Threshold value for intensity neutron (sigma above mean)
                    neutron_intensity_threshold: 8.0
                    # Threshold on the maximum level of intensity for intensity neutron
                    max_intensity_correlation_threshold: 0.8
                    # Maximum number of tree realizations
                    trees_number: 7
                    # Maximum extent for each tree branch
                    max_branch_length: 64
                    # Ratio of pixel spacing along slant range and azimuth
                    pixel_spacing_ratio: 1.0
                    # Threshold for the initial correlation value
                    initial_correlation_threshold: 0.1
                    # Threshold for the maximum correlation value
                    max_correlation_threshold: 0.9
                    # Increments to correlation threshold
                    correlation_threshold_increments: 0.1
                    # Minimum size of an area to unwrap
                    min_tile_area: 0.003125
                    # Number of lines used in the bootstrap phase
                    bootstrap_lines: 16
                    # Minimum bootstrap overlapping area
                    min_overlap_area: 16
                    # Bootstrap phase variance threshold (radian)
                    phase_variance_threshold: 8
                phass:
                    # Increments to correlation threshold
                    correlation_threshold_increments: 0.2
                    # Normalized interferometric correlation value of the pixel to unwrap
                    # Pixels with a good_correlation lower than the assigned value are
                    # masking out during the phass unwrapping
                    good_correlation: 0.7
                    # Minimum size (in pixels) of a region to unwrap
                    min_unwrap_area: 200
                    # Filepath to power raster (reference RSLC)
                    power:
                snaphu:
                    # Effective number of looks used in input correlation data
                    nlooks:
                    # Statistical cost mode
                    cost_mode: smooth
                    # File path to binary mask of valid pixels (GDT_Byte). Pixels labelled
                    # with 0 will be masked out in the wrapped interferogram.
                    mask:
                    # Coarse unwrapped phase estimates to guide SNAPHU. Must be same shape
                    # as input wrapped interferogram.
                    unwrapped_phase_estimate:
                    # Algorithm used for initialize unwrapped phase gradients.
                    # Supported algorithms: MST (Minimum Spanning Tree); MCF
                    # (Minimum Cost Flow)
                    initialization_method: mcf
                    # If True, prints verbose outputs
                    verbose: False
                    # If True, dumps intermediate data to 'scratchdir' for debugging
                    debug: False
                    # Configuration parameters for the specified cost mode.
                    cost_mode_parameters:
                        # Deformation cost parameter options
                        deformation_parameters:
                            # Factor applied to range discontinuity probability density to get
                            # corresponding value for azimuth
                            azdz_factor: 1.0
                            # Max phase discontinuity in units of cycle of 2*pi. Set to 0 if not abrupt
                            # phase discontinuity are expected
                            defo_max: 1.2
                            # Phase variance in cycle^2 reflecting uncertainty in measurement of
                            # actual statistical correlation
                            sigsq_corr: 0.05
                            # Ratio of phase discontinuity probability density to peak probability
                            # density expected for discontinuity-possible pixel differences. 1: zero
                            # cost for discontinuity, o: infinite cost
                            defo_const: 0.9
                            # Factor for slope variance for non-layover to get falloff of probability
                            # density after the upper layover slope limit has been exceeded
                            lay_falloff_const: 2.0
                            # Number sliding window pixel to average the wrapped phase gradient to get mean
                            # non-layover slope in the direction parallel to the examined phase difference
                            kpar_dpsi: 7
                            # Same as above but in the perpendicular direction
                            kperp_dpsi: 7
                        # Smooth cost parameter options
                        smooth_parameters:
                            # Number sliding window pixel to average the wrapped phase gradient to get mean
                            # non-layover slope in the direction parallel to the examined phase difference
                            kpar_dpsi: 7
                            # Same as above but in the perpendicular direction
                            kperp_dpsi: 7
                        # PNorm cost parameter options
                        pnorm_parameters:
                            # Lp norm non-negative exponent
                            p: 0.0
                            # Flag to activate bidirectional Lp costs. If True, scalar weight of a Lp arc
                            # may be different depending on the direction of net flow arc. If False, scalar
                            # weight is the same regardless arc direction
                            bidir: True
                    # Configuration parameters used by the network initialization and nonlinear
                    # network flow solver algorithms
                    solver_parameters:
                        # Maximum flow increment
                        max_flow_inc: 4
                        # Maximum flow in initialization. If 0, max flow is computed automatically.
                        # To disable, set to large value not overflowing long integer data
                        init_max_flow: 9999
                        # Constant to add to max flow expected from statistical cost functions for automatically
                        # determining initial maximum flow
                        arc_max_flow_const: 3
                        # Threshold precision for iterative numerical calculation
                        threshold: 0.001
                        # Max cost for scalar MST cost and to estimate number of buckets
                        # for solver routine
                        max_cost: 1000.0
                        # Cost scaling factor applied to floating-point costs before integer
                        # cost quantization
                        cost_scale: 100.0
                        # Integer spacing representing one unit of flow (one phase cycle)
                        # when storing costs as short integers
                        n_cycle: 200
                        # Fraction of total number of nodes to add in each tree expansion phase of
                        # the solver algorithm.
                        max_new_node_const: 0.0008
                        # Number of cycles to call to the solver with a specific flow increment delta
                        # and still consider that increment done. Ideally zero, but scaling for different
                        # deltas may leave some negative cycles not critically affecting the solution.
                        # If None, automatically determined from interferogram shape
                        max_n_flow_cycles:
                        # Fraction of the number of pixels to use as the maximum number of cycles
                        # allowed for a specific flow increment if max_n_flow_cycles was None
                        max_cycle_frac: 0.00001
                        # Minimum number of connected nodes for unwrappping. If disconnected sets of pixels are
                        # present, a source is selected for each connected set, if number of nodes in the set
                        # is greater than n_conn_node_min. Must be nonnegative.
                        n_conn_node_min: 0
                        # Number of major iteration between tree pruning operations. Smaller numbers cause
                        # pruning to occur more frequently
                        n_major_prune: 2000000000
                        # Cost threshold for tree pruning. Lower thresholds prune more aggressively
                        prune_cost_thresh: 2000000000
                    # Connected components parameters
                    connected_components_parameters:
                        # Minimum size of a single connected component, as a fraction of the total
                        # number of pixels in the tile
                        min_frac_area: 0.01
                        # Cost threshold for connected components. Higher threshold gives smaller
                        # connected components
                        cost_thresh: 300
                        # Max number of connected components per tile
                        max_ncomps: 32

            # Set of options to enable compression, choose compression level,
            # chunk size and shuffle filter
        output:
            # Enable/Disable gzip compression
            compression_enabled: True
            # Compression level: 1: least compression; 9: best compression
            compression_level: 5
            # Chunk size of InSAR raster
            chunk_size: [128, 128]
            # Enable/disable shuffle filter
            shuffle: True
        qa:
            rifg:
                workflows:
                    # Flag to run `validate` workflow to validate the
                    # input file against its product spec.
                    # Default: True
                    validate: true

                    # Flag to run `qa_reports` workflow to generate a
                    # PDF report, geolocated browse image, compute statistics
                    # on the input file, etc..
                    # Default: True
                    qa_reports: true

                qa_reports:
                    hsi_img:
                        # True to perform histogram equalization on the Intensity channel
                        # (the coherence magnitude layer) in the browse image PNG.
                        # (Browse image is in HSI color space.) PDF report will not be affected.
                        # See: https://scikit-image.org/docs/stable/auto_examples/color_exposure/plot_equalize.html
                        # Default: True
                        equalize_browse: true

                        # The maximum number of pixels allowed for the longest
                        # side of the final 2D browse image. Defaults to 2048.
                        # Default: 2048
                        longest_side_max: 2048

            runw:
                workflows:
                    # Flag to run `validate` workflow to validate the
                    # input file against its product spec.
                    # Default: True
                    validate: true

                    # Flag to run `qa_reports` workflow to generate a
                    # PDF report, geolocated browse image, compute statistics
                    # on the input file, etc..
                    # Default: True
                    qa_reports: true

                qa_reports:
                    phase_img:
                        # The multiple of pi to rewrap the unwrapped phase image.
                        # If None, no rewrapping will occur.
                        # Ex: If 3 is provided, the image is rewrapped to the interval [0, 3pi).
                        # Default: 7
                        rewrap: 7

                    hsi_img:
                        # True to perform histogram equalization on the Intensity channel
                        # (the coherence magnitude layer) in the browse image PNG.
                        # (Browse image is in HSI color space.) PDF report will not be affected.
                        # See: https://scikit-image.org/docs/stable/auto_examples/color_exposure/plot_equalize.html
                        # Default: True
                        equalize_browse: true

                        # The maximum number of pixels allowed for the longest
                        # side of the final 2D browse image. Defaults to 2048.
                        # Default: 2048
                        longest_side_max: 2048

                        # The multiple of pi to rewrap the unwrapped phase image
                        # when generating the HSI image(s). If None, no rewrapping will occur.
                        # Ex: If 3 is provided, the image is rewrapped to the interval [0, 3pi).
                        # Default: 7
                        rewrap: 7

            gunw:
                workflows:
                    # Flag to run `validate` workflow to validate the
                    # input file against its product spec.
                    # Default: True
                    validate: true

                    # Flag to run `qa_reports` workflow to generate a
                    # PDF report, geolocated browse image, compute statistics
                    # on the input file, etc..
                    # Default: True
                    qa_reports: true

                qa_reports:
                    hsi_img:
                        # True to perform histogram equalization on the Intensity channel
                        # (the coherence magnitude layer) in the browse image PNG.
                        # (Browse image is in HSI color space.) PDF report will not be affected.
                        # See: https://scikit-image.org/docs/stable/auto_examples/color_exposure/plot_equalize.html
                        # Default: True
                        equalize_browse: true

                        # The maximum number of pixels allowed for the longest
                        # side of the final 2D browse image. Defaults to 2048.
                        # Default: 2048
                        longest_side_max: 2048

                        # The multiple of pi to rewrap the unwrapped phase image
                        # when generating the HSI image(s). If None, no rewrapping will occur.
                        # Ex: If 3 is provided, the image is rewrapped to the interval [0, 3pi).
                        # Default: 7
                        rewrap: 7

            roff:
                workflows:
                    # Flag to run `validate` workflow to validate the
                    # input file against its product spec.
                    # Default: True
                    validate: true

                    # Flag to run `qa_reports` workflow to generate a
                    # PDF report, geolocated browse image, compute statistics
                    # on the input file, etc..
                    # Default: True
                    qa_reports: true

                qa_reports:
                    quiver_plots:
                        # The vmin and vmax values to generate the quiver plot.
                        # The magnitude of the offsets is clipped to this interval,
                        # which (in turn) is used for the interval of the colorbar.
                        # If None, the interval is computed using the min and max
                        # magnitudes of along track and slant range offset.
                        # Default: None
                        colorbar_min_max:

                        # Stride along each axis of the Frequency A
                        # image arrays for decimating the quiver plot image for the browse PNG.
                        # This takes precedence over `longest_side_max`.
                        # Format: [<num_rows>, <num_cols>]
                        # Example: [6,7]
                        # If None, QA-SAS will compute the decimation strides
                        # based on `longest_side_max` and creating square pixels.
                        # Default: None
                        browse_decimation_freqa:

                        # Stride along each axis of the Frequency B
                        # image arrays for decimating the quiver plot image for the browse PNG.
                        # This takes precedence over `longest_side_max`.
                        # Format: [<num_rows>, <num_cols>]
                        # Example: [6,7]
                        # If None, QA-SAS will compute the decimation strides
                        # based on `longest_side_max` and creating square pixels.
                        # Default: None
                        browse_decimation_freqb:

                        # Number of arrows (vectors) to plot per the
                        # longest edge of the raster.
                        # Default: 20
                        arrow_density: 20

                        # Scales the length of the arrow inversely.
                        # Number of data units per arrow length unit, e.g., m/s per plot width;
                        # a smaller scale parameter makes the arrow longer.
                        # If None, a simple autoscaling algorithm is used, based on the average
                        # vector length and the number of vectors.
                        # See: The `scaling` parameter for `matplotlib.axes.Axes.quiver()`.
                        # Default: None
                        arrow_scaling:

                        # The maximum number of pixels allowed for the longest
                        # side of the final 2D browse image. If `decimation_freqX` is not
                        # None, then `longest_side_max` will be ignored.
                        # Default: 2048
                        longest_side_max: 2048

            goff:
                workflows:
                    # Flag to run `validate` workflow to validate the
                    # input file against its product spec.
                    # Default: True
                    validate: true

                    # Flag to run `qa_reports` workflow to generate a
                    # PDF report, geolocated browse image, compute statistics
                    # on the input file, etc..
                    # Default: True
                    qa_reports: true

                qa_reports:
                    quiver_plots:
                        # The vmin and vmax values to generate the quiver plot.
                        # The magnitude of the offsets is clipped to this interval,
                        # which (in turn) is used for the interval of the colorbar.
                        # If None, the interval is computed using the min and max
                        # magnitudes of along track and slant range offset.
                        # Default: None
                        colorbar_min_max:

                        # Stride along each axis of the Frequency A
                        # image arrays for decimating the quiver plot image for the browse PNG.
                        # This takes precedence over `longest_side_max`.
                        # Format: [<num_rows>, <num_cols>]
                        # Example: [6,7]
                        # If None, QA-SAS will compute the decimation strides
                        # based on `longest_side_max` and creating square pixels.
                        # Default: None
                        browse_decimation_freqa:

                        # Stride along each axis of the Frequency B
                        # image arrays for decimating the quiver plot image for the browse PNG.
                        # This takes precedence over `longest_side_max`.
                        # Format: [<num_rows>, <num_cols>]
                        # Example: [6,7]
                        # If None, QA-SAS will compute the decimation strides
                        # based on `longest_side_max` and creating square pixels.
                        # Default: None
                        browse_decimation_freqb:

                        # Number of arrows (vectors) to plot per the
                        # longest edge of the raster.
                        # Default: 20
                        arrow_density: 20

                        # Scales the length of the arrow inversely.
                        # Number of data units per arrow length unit, e.g., m/s per plot width;
                        # a smaller scale parameter makes the arrow longer.
                        # If None, a simple autoscaling algorithm is used, based on the average
                        # vector length and the number of vectors.
                        # See: The `scaling` parameter for `matplotlib.axes.Axes.quiver()`.
                        # Default: None
                        arrow_scaling:

                        # The maximum number of pixels allowed for the longest
                        # side of the final 2D browse image. If `decimation_freqX` is not
                        # None, then `longest_side_max` will be ignored.
                        # Default: 2048
                        longest_side_max: 2048
